{"version":3,"sources":["components/SearchBar.jsx","components/Order.jsx","components/DeleteAll.jsx","components/AddTutorial.jsx","components/Home.jsx","components/AddTutorialPage.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","width","BasicTextFields","classes","className","noValidate","autoComplete","TextField","id","label","variant","formControl","minWidth","selectEmpty","marginTop","SimpleSelect","React","useState","age","setAge","FormControl","InputLabel","Select","labelId","value","onChange","event","target","MenuItem","OutlinedButtons","Button","color","AddTutorial","Home","tutorial","setTutorial","useEffect","getTutorials","a","fetch","data","json","tutorials","console","log","map","item","key","nombre","profesor","fecha","AddTutorialPage","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b89537c1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function BasicTextFields() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <TextField\r\n        id=\"outlined-basic\"\r\n        label=\"Buscar por titulo\"\r\n        variant=\"outlined\"\r\n      />\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport \"./order.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function SimpleSelect() {\r\n  const classes = useStyles();\r\n  const [age, setAge] = React.useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"orderBox\">\r\n        <p>Ordernado por</p>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"demo-simple-select-label\">Titulo</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={age}\r\n            onChange={handleChange}\r\n          >\r\n            <MenuItem value={10}>Titulo</MenuItem>\r\n\r\n            <MenuItem value={20}>Fecha</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function OutlinedButtons() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button variant=\"outlined\" color=\"secondary\">\r\n        ELIMINA TODOS\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./addTutorial.css\";\r\n\r\nconst AddTutorial = () => {\r\n  return (\r\n    <div>\r\n      <button className=\"rounded-button\">+</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTutorial;\r\n","import React from \"react\";\r\nimport Searchbar from \"./SearchBar\";\r\nimport Order from \"./Order\";\r\nimport DeleteAll from \"./DeleteAll\";\r\nimport AddTutorial from \"./AddTutorial\";\r\n\r\nfunction Home() {\r\n  const [tutorial, setTutorial] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    getTutorials();\r\n  }, []);\r\n\r\n  const getTutorials = async () => {\r\n    const data = await fetch(\r\n      \"https://rayentutorialtestapp.azurewebsites.net/tutorials\"\r\n    );\r\n    const tutorials = await data.json();\r\n    console.log(tutorials);\r\n    setTutorial(tutorials);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"header\">\r\n        <p>Tutoriales</p>\r\n      </header>\r\n      <Searchbar />\r\n      <Order />\r\n      <ul className=\"tutorialBox\">\r\n        {\" \"}\r\n        {tutorial.map((item) => (\r\n          <li key={item.id}>\r\n            {item.nombre} {item.profesor} {item.fecha}{\" \"}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <DeleteAll />\r\n      <AddTutorial />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst AddTutorialPage = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <form className={classes.root} noValidate autoComplete=\"off\">\r\n        <TextField id=\"outlined-basic\" label=\"Titulo\" variant=\"outlined\" />\r\n        <TextField id=\"outlined-basic\" label=\"Profesor\" variant=\"outlined\" />\r\n        <TextField id=\"outlined-basic\" label=\"Materia\" variant=\"outlined\" />\r\n        <TextField id=\"outlined-basic\" label=\"Fecha\" variant=\"outlined\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTutorialPage;\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport AddTutorialPage from './components/AddTutorialPage';\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/home\" exact component={Home} />\n        <Route path=\"/add\" component={AddTutorialPage} />\n      </Switch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}